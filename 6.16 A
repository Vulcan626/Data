#include <iostream>
#include <queue>
using namespace std;
int n,root=1;
struct treenode{
    int l,r;
}btree[200];
void levelorder(int p)
{
    if(p==-1) return;
    deque<int>lqueue;
    lqueue.push_back(p);//根结点入队
    while (!lqueue.empty())//当整个队列为空的时候，遍历就完成了
    {
        cout<<lqueue.front()<<" ";//返回队列中第一个结点
        lqueue.pop_front();//第一个结点出队
        //cout<<p<<" ";//访问出队的结点的数据
        //出队结点的左右结点入队
        if(btree[p].l)
            lqueue.push_back(btree[p].l);
        if(btree[p].r)
            lqueue.push_back(btree[p].l);
    }
}
int main(){
    cin>>n;
    for(int i=1;i<=n;i++){
        int a,le,ri;
        cin>>a>>le>>ri;
        btree[a].l=le;
        btree[a].r=ri;
    }
    for(int i=1;i<=n;i++)
    {
         for(int j=1;j<=n;j++)
         if(btree[j].l==root||btree[j].r==root)
               root=j;
    }
    levelorder(root);
    return 0;
}
